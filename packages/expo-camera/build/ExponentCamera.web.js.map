{"version":3,"file":"ExponentCamera.web.js","sourceRoot":"","sources":["../src/ExponentCamera.web.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAwB,MAAM,OAAO,CAAC;AAC7C,OAAO,EAAE,UAAU,EAAE,cAAc,EAAE,IAAI,EAAE,MAAM,cAAc,CAAC;AAGhE,OAAO,aAAa,MAAM,6BAA6B,CAAC;AAExD;;;;;;GAMG;AACH,MAAM,CAAC,OAAO,OAAO,cAAe,SAAQ,KAAK,CAAC,SAA0B;IAA5E;;QAGE,YAAO,GAAG,GAAG,CAAC,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;QACnC,CAAC,CAAC;IAoBJ,CAAC;IAlBC,MAAM;QACJ,MAAM,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,iBAAiB,CAAC,CAAC,CAAC,MAAM,CAAC;QAC5F,MAAM,UAAU,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxD,MAAM,KAAK,GAAkB;YAC3B,GAAG,UAAU,CAAC,kBAAkB;YAChC,KAAK,EAAE,MAAM;YACb,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,OAAO;YAClB,SAAS;SACV,CAAC;QAEF,OAAO,CACL,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,UAAU,EAAE,SAAS,EAAE,GAAG,UAAU,EAAE,CAAC,CAC7D;QAAA,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,WAAW,EAC5D;QAAA,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CACtB;MAAA,EAAE,IAAI,CAAC,CACR,CAAC;IACJ,CAAC;CACF","sourcesContent":["import React, { CSSProperties } from 'react';\nimport { StyleSheet, findNodeHandle, View } from 'react-native';\n\nimport { NativePropsType } from './Camera.types';\nimport CameraManager from './ExponentCameraManager.web';\n\n/*\n * TODO: Bacon\n * onCameraReady?: Function;\n * onMountError?: ({ nativeEvent }: { nativeEvent: MountError }) => void;\n *\n * Handle when type: CameraManager.Type.back and back isn't available\n */\nexport default class ExponentCamera extends React.Component<NativePropsType> {\n  video?: number | null;\n\n  _setRef = ref => {\n    this.video = findNodeHandle(ref);\n  };\n\n  render() {\n    const transform = this.props.type === CameraManager.Type.front ? 'rotateY(180deg)' : 'none';\n    const reactStyle = StyleSheet.flatten(this.props.style);\n    const style: CSSProperties = {\n      ...StyleSheet.absoluteFillObject,\n      width: '100%',\n      height: '100%',\n      objectFit: 'cover',\n      transform,\n    };\n\n    return (\n      <View style={{ flex: 1, alignItems: 'stretch', ...reactStyle }}>\n        <video ref={this._setRef} style={style} autoPlay playsInline />\n        {this.props.children}\n      </View>\n    );\n  }\n}\n"]}