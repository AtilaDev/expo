{"version":3,"file":"ExponentCameraManager.web.js","sourceRoot":"","sources":["../src/ExponentCameraManager.web.ts"],"names":[],"mappings":"AAAA,OAAuB,EAAE,YAAY,EAAE,MAAM,0BAA0B,CAAC;AAIxE,eAAe;IACb,IAAI,IAAI;QACN,OAAO,uBAAuB,CAAC;IACjC,CAAC;IACD,IAAI,IAAI;QACN,OAAO;YACL,IAAI,EAAE,YAAY,CAAC,WAAW;YAC9B,KAAK,EAAE,YAAY,CAAC,IAAI;SACzB,CAAC;IACJ,CAAC;IACD,IAAI,SAAS;QACX,OAAO;YACL,EAAE,EAAE,IAAI;YACR,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,MAAM;SACb,CAAC;IACJ,CAAC;IACD,IAAI,SAAS;QACX,OAAO;YACL,EAAE,EAAE,IAAI;YACR,GAAG,EAAE,KAAK;YACV,IAAI,EAAE,MAAM;SACb,CAAC;IACJ,CAAC;IACD,IAAI,YAAY;QACd,OAAO;YACL,IAAI,EAAE,MAAM;SACb,CAAC;IACJ,CAAC;IACD,IAAI,YAAY;QACd,OAAO,EAAE,CAAC;IACZ,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,OAAuB,EAAE,MAAsB;QAC/D,MAAM,MAAM,GAAG;YACb,GAAG,OAAO;YACV,gBAAgB,EAAE,OAAO,CAAC,OAAO,IAAI,IAAI;SAI1C,CAAC;QAEF,MAAM,OAAO,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAE1C,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,OAAO;YACZ,MAAM,EAAE,OAAO;YACf,KAAK,EAAE,CAAC;YACR,MAAM,EAAE,CAAC;YACT,IAAI,EAAE,SAAS;SAChB,CAAC;QAEF,MAAM,aAAa,GAAG,MAAM,CAAC,iBAAiB,EAAE,CAAC;QACjD,IAAI,aAAa,EAAE;YACjB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,aAAa,CAAC;YACxC,eAAe,CAAC,KAAK,GAAG,KAAK,CAAC;YAC9B,eAAe,CAAC,MAAM,GAAG,MAAM,CAAC;YAChC,eAAe,CAAC,IAAI,GAAG,aAAa,CAAC;SACtC;QAED,IAAI,OAAO,CAAC,cAAc,EAAE;YAC1B,OAAO,CAAC,cAAc,CAAC,eAAe,CAAC,CAAC;SACzC;QAED,OAAO,eAAe,CAAC;IACzB,CAAC;IACD,KAAK,CAAC,YAAY,CAAC,MAAsB;QACvC,OAAO,MAAM,MAAM,CAAC,UAAU,EAAE,CAAC;IACnC,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,MAAsB;QACxC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE;YAC9B,MAAM,CAAC,kBAAkB,GAAG,YAAY,CAAC,IAAI,CAAC;SAC/C;QACD,OAAO,MAAM,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;IAC1E,CAAC;CACF,CAAC","sourcesContent":["import LibCameraPhoto, { FACING_MODES } from 'jslib-html5-camera-photo';\n\nimport { PictureOptions, CapturedPicture } from './Camera.types';\n\nexport default {\n  get name(): string {\n    return 'ExponentCameraManager';\n  },\n  get Type() {\n    return {\n      back: FACING_MODES.ENVIRONMENT,\n      front: FACING_MODES.USER,\n    };\n  },\n  get FlashMode() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n    };\n  },\n  get AutoFocus() {\n    return {\n      on: 'on',\n      off: 'off',\n      auto: 'auto',\n    };\n  },\n  get WhiteBalance() {\n    return {\n      auto: 'auto',\n    };\n  },\n  get VideoQuality() {\n    return {};\n  },\n  async takePicture(options: PictureOptions, camera: LibCameraPhoto): Promise<CapturedPicture> {\n    const config = {\n      ...options,\n      imageCompression: options.quality || 0.92,\n      // sizeFactor: 1,\n      // imageType: 'jpg',\n      // isImageMirror:\n    };\n\n    const dataUri = camera.getDataUri(config);\n\n    const capturedPicture = {\n      uri: dataUri,\n      base64: dataUri,\n      width: 0, //undefined,\n      height: 0, //undefined,\n      exif: undefined,\n    };\n\n    const cameraSettigs = camera.getCameraSettings();\n    if (cameraSettigs) {\n      const { height, width } = cameraSettigs;\n      capturedPicture.width = width;\n      capturedPicture.height = height;\n      capturedPicture.exif = cameraSettigs;\n    }\n\n    if (options.onPictureSaved) {\n      options.onPictureSaved(capturedPicture);\n    }\n\n    return capturedPicture;\n  },\n  async pausePreview(camera: LibCameraPhoto): Promise<any> {\n    return await camera.stopCamera();\n  },\n  async resumePreview(camera: LibCameraPhoto): Promise<any> {\n    if (!camera.__cameraFacingMode) {\n      camera.__cameraFacingMode = FACING_MODES.USER;\n    }\n    return await camera.startCameraMaxResolution(camera.__cameraFacingMode);\n  },\n};\n"]}